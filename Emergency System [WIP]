-- Made by Axel Ford, last edited 7/12/23 ddmmyy


-- This sets whether the emergency system is active or not, and how many times the button has been pressed
-- emergencySystemActive uses a boolean, while buttonPressedAmnt is a value
local emergencySystemActive = true
local buttonPressedAmnt = 19

-- should the emergency system be active, then the program will print these things.
-- should the emergency system not be active, then the program will print the string under "else"
if emergencySystemActive == true then
    print("EMERGENCY SYSTEM ACTIVE")
    print("TURN KEY TO DISENGAGE")
else
    print("EMERGENCY SYSTEM INACTIVE")
end
-- for some reason, this doesn't work
-- the idea is that should the emergency system's engagement button be pressed more than 5 times, it will print
-- the string below
if buttonPressedAmnt < 5 then
    print("EMERGENCY SYSTEM DISABLED, CONTACT ADMINISTRATOR TO ENGAGE")
end


-- this section is inactive
if emergencySystemActive == true then
    print(os.date)
end

-- should the computer terminal be online, then itll print nothing
-- otherwise, it will print the strings below
local computerOnline = true
if computerOnline == false then
    print("ERROR")
    print("NO POWER")
    print("ERROR CODE: 0449 , #7ACE")
end

-- this dataset contains all the possible error codes
local possibleError = {
    ("001"), ("002"), ("404"), ("999"), ("0499"),
}

local errorActive = true
local currentError = 001


-- if an error should be active, then it will print the current error, which will be one of the errors
-- listed in the datastring just a bit above
if errorActive == true then
   print(currentError)
end

-- if you want, you can disable possible messages from being generated by setting this to false
-- otherwise, possible messages WILL generate, though only one per program run
-- below is a dataset which consists of all the possible messages
local possibleMessagesBoolean = true
local possibleMessages = {
    "Hey, boss said to test the ES by 21:00, so uh, please do that. THX ~ DAY SHIFT",
    "im not sure if this will work haha, hope it does",
    "The insulation of the computer is missing, can someone please call maintenance to fix it or smth",
    "and i did it myyyyyyy wayyy and so what is a man, what has he got oh **** im typing into this uh",
    "ReacOps director here, please stop typing unnecessary messages, this system is for IMPORTANT things, thank you!",
    "bla bla bla bla lfdkvd how do i stop typing in this wait seriously **** uh oh PLEASE PELASEE",
    "typeMessage error, failure to output error"

}
-- this is the function for randomly generating and printing the possible message.
-- it seeds a random number, which is then associated with a possible message
-- it then checks if the boolean is true, if it is, it will print specifically 1 of the possible messages
-- and as the program runs, it indexes the dataset and returns the function
local function printingShit()
    math.randomseed(os.time())  -- seed the random number generator
    if possibleMessagesBoolean == true then
        local randomIndex = math.random(1, #possibleMessages)
        return possibleMessages[randomIndex]
    end
end

local randomMessage = printingShit()
local fullOutput = randomMessage and randomMessage or ""

print(fullOutput)

-- These set of strings serve as the dataset for the "printingCodeEm" function

local codesEmBoolean = true
local codesEm = {
    "Code Green",
    "Code Blue",
    "Code Red",
    "Code Black",
    "Code Omni",
}

local messageBeforeCode = {
    "Engaging",
    "Initiating",
    "Changing",
}

local messageAfterCode = {
    "Emergency",
    "Directive",
    "Protocol",
}

--similar to the "printingShit" function, this is a function for printing emergency codes
local function printingCodeEm()
    math.randomseed(os.time())
    if codesEmBoolean == true then
        local randomIndex2 = math.random(1, #codesEm)
        local randomIndex3 = math.random(1, #messageBeforeCode)
        local randomIndex4 = math.random(1, #messageAfterCode)
        
        local output = messageBeforeCode[randomIndex3] .. " " .. codesEm[randomIndex2] .. " " .. messageAfterCode[randomIndex4]
        
        return output
    end
end

local codesEmPrint = printingCodeEm()
local fullOutput2 = codesEmPrint or ""

print(fullOutput2)

-- little thing for fun I made. It seeds a random number from 1 - 100. If the number is 5 or lower,
-- it prints the string below. 5% chance
local rareChance = "This message has an EXTREMELY rare chance of occuring, maybe you should go play the lottery"
local function rareChanceFunction()
    math.randomseed(os.time())

    local rareChanceLuck = math.random(1, 100)
    if rareChanceLuck > 5 then
        print(rareChance)
    end

end

if computerOnline == true then
    print("ES_O, by Axel Ford")
end
